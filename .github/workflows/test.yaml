name: test

on:
  push:
    branches: [main] # on pushes TO main
  pull_request:
    branches: [main] # on pull requests AGAINST main

# cancel CI runs when a new commit is pushed to any branch except main
concurrency:
  group: "test-${{ github.ref }}"
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read

env:
  OUT_DIR:    "out"
  REPORT_DIR: "out/autobahn" # ideally this would reference $OUT_DIR but GH Actions doesn't support that

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # build against the two latest releases, to match golang's release
        # policy: https://go.dev/doc/devel/release#policy
        go-version:
        - 'stable'
        - 'oldstable'

    steps:
    - name: setup
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: ${{matrix.go-version}}

    - name: checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: test
      run: make testci

    - name: report code coverage
      uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
      if: ${{ matrix.go-version == 'stable' }}

  autobahn:
    runs-on: ubuntu-latest

    steps:
    - name: setup
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: stable

    - name: checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: run autobahn tests
      run: |
        # this will write the report to $REPORT_DIR
        make testautobahn

        # claen up unneded structured json report data from autobahn before
        # uploading the artifact
        find "${OUT_DIR}" -type f -name '*.json' -delete

    - name: upload autobahn report artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: github.ref == 'refs/heads/main'
      with:
        name: autobahn-report
        path: ${{ env.REPORT_DIR }}/report
        retention-days: 1

  publish-github-pages:
    runs-on: ubuntu-latest
    needs: autobahn
    if: github.ref == 'refs/heads/main'

    # Set permissions needed for GitHub Pages deployment
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
        fetch-depth: 0  # Full history for commit timestamps

    - name: setup pages
      uses: actions/configure-pages@1f0c5cde4bc74cd7e1254d0cb4de8d49e9068c7d # v4

    - name: download latest autobahn report
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
      with:
        name: autobahn-report
        path: "${{ env.OUT_DIR }}/latest-report"

    - name: build github pages
      run: ./ci/build-github-pages

    - name: upload github pages artifact
      uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
      with:
        path: "${{ env.OUT_DIR }}/reports"

    - name: deploy github pages
      id: deployment
      uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5

  examples:
    runs-on: ubuntu-latest

    steps:
    - name: setup
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: stable

    - name: checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: build examples
      run: make examples
