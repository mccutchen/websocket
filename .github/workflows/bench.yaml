name: bench

on:
  workflow_dispatch:
    inputs:
      baseline_sha:
        description: 'Baseline commit (defaults to latest main)'
        required: false
        type: string
        default: ''
      comparison_commit:
        description: 'Commit to compare against baseline'
        required: true
        type: string
      pr_number:
        description: 'Pull request on which to post benchmark results (optional)'
        required: false
        type: number

jobs:
  baseline:
    runs-on: ubuntu-latest
    outputs:
      baseline_sha: ${{ steps.get-baseline.outputs.baseline_sha }}
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: determine baseline commit
        id: get-baseline
        run: |
          if [ -z "${{ inputs.baseline_sha }}" ]; then
            git fetch origin main
            BASELINE=$(git rev-parse origin/main)
          else
            BASELINE="${{ inputs.baseline_sha }}"
          fi
          echo "baseline_sha=${BASELINE::7}" >> $GITHUB_OUTPUT

      - name: run baseline benchmarks
        run: |
          git checkout ${{ steps.get-baseline.outputs.baseline_sha }}
          make bench | tee bench-results.txt $GITHUB_STEP_SUMMARY

      - name: upload baseline results
        uses: actions/upload-artifact@v4
        with:
          name: baseline-results
          path: bench-results.txt
          retention-days: 1

  comparison:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: run comparison benchmarks
        run: |
          git checkout ${{ inputs.comparison_commit }}
          make bench | tee bench-results.txt $GITHUB_STEP_SUMMARY

      - name: upload comparison results
        uses: actions/upload-artifact@v4
        with:
          name: comparison-results
          path: bench-results.txt
          retention-days: 1

  analysis:
    needs: [baseline, comparison]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: download baseline results
        uses: actions/download-artifact@v4
        with:
          name: baseline-results
          path: ./baseline

      - name: download comparison results
        uses: actions/download-artifact@v4
        with:
          name: comparison-results
          path: ./comparison

      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: analyze results
        run: |
          set -euo pipefail

          BASELINE_SHA="${{ needs.baseline.outputs.baseline_sha }}"
          COMPARISON_SHA="${{ inputs.comparison_commit }}"
          COMPARISON_SHA="${COMPARISON_SHA::7}"
          COMPARISON_URL="https://github.com/${{ github.repository }}/compare/$BASELINE...$COMPARISON"
          COMPARISON_LINK="[$BASELINE...$COMPARISON]($COMPARISON_URL)"
          SUMMARY_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          go run golang.org/x/perf/cmd/benchstat@latest ./baseline/bench-results.txt ./comparison/bench-results.txt | tee bench-stats.txt

          # Create both GitHub step summary and PR comment content
          cat <<EOF >pr_comment
          ### benchstats: $COMPARISON_LINK

          View full benchmark output on the [workflow summary]($SUMMARY_URL).

          \`\`\`
          $(cat bench-stats.txt)
          \`\`\`
          EOF

          cat pr_comment >> $GITHUB_STEP_SUMMARY

      - name: post benchmark summary
        uses: marocchino/sticky-pull-request-comment@v2
        if: inputs.pr_number
        with:
          path: pr_comment
          number: ${{ inputs.pr_number }}
