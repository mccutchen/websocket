# Adapted from:
# https://github.com/swaggest/rest/blob/b19db8242abe420b23ea8ece43dd2fb79056a943/.github/workflows/bench.yml
name: bench

on:
  push:
    branches: [main] # on pushes TO main
  pull_request:
    branches: [main] # on pull requests AGAINST main

# cancel CI runs when a new commit is pushed to any branch except main
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  BENCH_RUNS: 10

jobs:
  baseline:
    runs-on: ubuntu-latest
    # if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - uses: actions/checkout@v4

      - name: restore previous baseline results
        id: baseline-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            bench-*.txt
          key: ${{ runner.os }}-bench-results

      - name: run current benchmarks
        id: current-benchmarks
        # We have to juggle file names here because the cache action saves and
        # restores the same file path and we need to keep it around for
        # benchstat comparison before saving new results with the same name.
        run: |
          if [ -f bench-main-curr.txt ]; then
            mv bench-main-curr.txt bench-main-prev.txt
          fi
          if [ -f bench-version-curr.txt ]; then
            mv bench-version-curr.txt bench-version-prev.txt
          fi

          make bench | tee bench-main-curr.txt

          CURR_VERSION="${GITHUB_SHA::7}"
          CURR_URL="https://github.com/mccutchen/websocket/commit/$CURR_VERSION"
          CURR_LINK="[$CURR_VERSION]($CURR_URL)"

          # record commit for which the benchmarks were run
          echo -n "$CURR_VERSION" > bench-version-curr.txt

          # report results
          echo "### benchmarks: $CURR_LINK" >>$GITHUB_STEP_SUMMARY
          echo '```'                        >>$GITHUB_STEP_SUMMARY
          cat  bench-main-curr.txt          >>$GITHUB_STEP_SUMMARY
          echo '```'                        >>$GITHUB_STEP_SUMMARY

          echo "XXX summary:"
          cat $GITHUB_STEP_SUMMARY

      - name: run prev benchmarks if necessary
        if: ${{ steps.baseline-restore.outputs.cache-hit == '' }}
        run: |
          # Determine the base SHA depending on the event type
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA=${{ github.event.pull_request.base.sha }}
          else
            BASE_SHA=$(git rev-parse HEAD~1)
          fi
          echo $BASE_SHA > bench-version-prev.txt

          git fetch origin main $BASE_SHA
          git reset --hard $BASE_SHA
          make bench | tee bench-main-prev.txt
          git reset --hard $GITHUB_SHA

      # TODO: cache benchstat
      - name: compare results with benchstat
        run: |
          go run golang.org/x/perf/cmd/benchstat@latest bench-main-prev.txt bench-main-curr.txt | tee -a bench-stats.txt

          CURR_VERSION="${GITHUB_SHA::7}"
          PREV_VERSION="$(cat bench-version-prev.txt 2>/dev/null)"
          COMPARE_URL="https://github.com/mccutchen/websocket/compare/$PREV_VERSION...$CURR_VERSION"
          COMPARE_LINK="[$PREV_VERSION...$CURR_VERSION]($COMPARE_URL)"

          echo "### benchstats: $COMPARE_LINK" >>$GITHUB_STEP_SUMMARY
          echo '```'                           >>$GITHUB_STEP_SUMMARY
          cat  bench-stats.txt                 >>$GITHUB_STEP_SUMMARY
          echo '```'                           >>$GITHUB_STEP_SUMMARY

      - name: save new baseline results
        if: ${{ steps.current-benchmarks.outcome == 'success' }}
        uses: actions/cache/save@v4
        with:
          path: |
            bench-*.txt
          key: ${{ runner.os }}-bench-results

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - uses: actions/checkout@v4

      - name: restore previous baseline results
        id: baseline-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            bench-*.txt
          key: ${{ runner.os }}-bench-results

      - name: run current benchmarks
        id: current-benchmarks
        # We have to juggle file names here because the cache action saves and
        # restores the same file path and we need to keep it around for
        # benchstat comparison before saving new results with the same name.
        run: |
          CURR_VERSION="${GITHUB_SHA::7}"
          OUT_PATH="bench-commit-${CURR_VERSION}.txt"

          make bench | tee $OUT_PATH

          CURR_URL="https://github.com/mccutchen/websocket/commit/$CURR_VERSION"
          CURR_LINK="[$CURR_VERSION]($CURR_URL)"

          # report results
          echo "### benchmarks @ $CURR_LINK" >>pr_comment
          echo '```'                         >>pr_comment
          cat  $OUT_PATH                     >>pr_comment
          echo '```'                         >>pr_comment

      # TODO: cache benchstat
      - name: compare results with benchstat
        if: ${{ steps.baseline-restore.outputs.cache-hit != '' }}
        run: |
          go run golang.org/x/perf/cmd/benchstat@latest bench-main-curr.txt bench-commit-*.txt | tee -a bench-stats.txt

          CURR_VERSION="${GITHUB_SHA::7}"
          PREV_VERSION="$(cat bench-version-prev.txt 2>/dev/null)"
          COMPARE_URL="https://github.com/mccutchen/websocket/compare/$PREV_VERSION...$CURR_VERSION"
          COMPARE_LINK="[$PREV_VERSION...$CURR_VERSION]($COMPARE_URL)"

          echo "### benchstats: $COMPARE_LINK" >>pr_comment
          echo '```'                           >>pr_comment
          cat  bench-stats.txt                 >>pr_comment
          echo '```'                           >>pr_comment

      - name: post benchmark results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: pr_comment
